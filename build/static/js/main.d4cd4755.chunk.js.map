{"version":3,"sources":["icons/hospital.svg","icons/business.svg","icons/home.svg","icons/restaurant.svg","icons/router.svg","icons/security.svg","icons/store.svg","icons/waves.svg","redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/siteTypesReducer.js","redux/reducers/addSiteReducer.js","redux/reducers/generatorReducer.js","redux/reducers/selectedSiteReducer.js","redux/reducers/calculationReducer.js","redux/reducers/projectsReducer.js","redux/reducers/projectIdReducer.js","redux/reducers/projectReducer.js","redux/reducers/sitesByProjectReducer.js","redux/reducers/allSiteTypesReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/siteTypesSaga.js","redux/sagas/setResultsSaga.js","redux/sagas/projectSaga.js","redux/sagas/addSiteSaga.js","redux/sagas/index.js","components/LogOutButton/LogOutButton.js","components/Nav/Nav.js","components/FloatingModal/FloatingModal.js","components/Footer/Footer.js","components/BugReport/BugReport.js","components/LoginPage/LoginPage.js","components/RegisterPage/RegisterPage.js","components/ProtectedRoute/ProtectedRoute.js","components/GeneratorList/GeneratorList.js","components/GeneratorForm/GeneratorForm.js","components/SiteTypeItem/SiteTypeItem.js","components/SiteTypeCategoryCard/SiteTypeCategoryCard.js","components/SiteTypeCategory/SiteTypeCategory.js","components/Results/Results.js","components/SiteTypeList/SiteTypeList.js","components/Map/Map.js","components/AddSite/AddSite.js","components/SavedSitePage/SavedSitePage.js","components/Marker/Marker.js","components/SitesMap/SitesMap.js","components/ProjectPage/ProjectPage.js","components/AddProject/AddProject.js","components/UserDashboard/UserDashboard.js","components/App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","combineReducers","loginMessage","state","arguments","length","undefined","type","registrationMessage","loginMode","userReducer","action","payload","siteTypesReducer","sites","Object","toConsumableArray","concat","generator","selectedSite","dieselCalculation","_start","moment","fundStartDate","_end","fundEndDate","_duration","Number","diff","dieselCost","i","siteGenerators","monthlyCost","totalDieselCost","timeToPayOff","payOffDate","payOffInTime","timeline","projectsReducer","projectId","project","sitesByProject","allSiteTypes","rootReducer","errors","user","siteTypes","loginUser","logoutUser","loginSaga","config","regenerator_default","a","wrap","_context","prev","next","put","headers","Content-Type","withCredentials","axios","post","t0","console","log","response","status","stop","_marked","this","_context2","_marked2","_context3","takeLatest","_marked3","registerUser","registrationSaga","registrationSaga_marked","registrationSaga_marked2","fetchUser","userSaga","get","sent","data","userSaga_marked","userSaga_marked2","fetchSiteTypes","fetchAllSiteTypes","siteTypesSaga","call","siteTypesSaga_marked","siteTypesSaga_marked2","siteTypesSaga_marked3","setResults","setResultsSaga","generators","startDate","endDate","select","total_price","map","parseInt","reduce","total","current","add","isBefore","setResultsSaga_marked","setResultsSaga_marked2","addProject","getProjects","getProject","getSites","projectSaga","projectSaga_marked","projects","projectSaga_marked2","id","projectSaga_marked3","_context4","_marked4","_context5","_marked5","addSite","addSiteSaga","results","site_id","project_id","addSiteSaga_marked","takeEvery","addSiteSaga_marked2","rootSaga","all","sagas_marked","connect","props","react_default","createElement","className","onClick","dispatch","href","src","alt","Link","to","Fragment","components_LogOutButton_LogOutButton","FloatingModal","open","_this","modalOpen","classes","Button_default","button","handleModalToggle","variant","color","label","buttonText","Modal_default","aria-labelledby","aria-describedby","onClose","handleClose","style","top","left","transform","paper","Typography_default","title","TextField_default","value","name","onChange","handleChangeFor","email","multiline","message","handleSubmit","subject","Component","withStyles","theme","position","width","spacing","unit","backgroundColor","palette","background","boxShadow","shadows","padding","textAlign","margin","Footer","contactExpertOpen","reportBugOpen","snackbarOpen","propertyName","event","setState","objectSpread","defineProperty","target","handleContactExpertToggle","property","preventDefault","content","siteName","location","address","then","catch","error","_this2","components_FloatingModal_FloatingModal","Snackbar_default","autoHideDuration","BugReport","handleReportBugToggle","alert","LoginPage","username","password","login","history","push","handleInputChangeFor","role","onSubmit","size","withRouter","RegisterPage","ComponentToShow","ComponentToProtect","component","otherProps","objectWithoutProperties","Route","assign","GeneratorList","totalCost","newGen","toFixed","GeneratorForm","hasGenerator","energyUsage","generatorSize","energyUnit","handleHasGeneratorToggle","handleAddEnergyUsage","InputLabel_default","htmlFor","toString","marginRight","FormControlLabel_default","control","RadioGroup_default","display","flexDirection","group","Radio_default","FormControl_default","Input_default","placeholder","FormHelperText_default","Select_default","MenuItem_default","disabled","components_GeneratorList_GeneratorList","textTransform","SiteTypeItem","site","description","Card_default","card","CardContent_default","icon","power_need","solar_panel","battery_bank","CardActions_default","selectSite","marginTop","height","fontSize","SiteTypeCategoryCard","selectSiteCategory","toggleColor","SiteTypeCategory","active","myColor","hospitalIcon","LocalHospital_default","waterIcon","Waves_default","commsIcon","Router_default","opsIcon","Security_default","adminIcon","BusinessCenter_default","shelterIcon","Home_default","foodIcon","Restaurant_default","logsIcon","Store_default","cardDiv","components_SiteTypeCategoryCard_SiteTypeCategoryCard","flexWrap","justifyContent","start","end","Results","handleChange","datasets","x","Date","y","borderColor","borderWidth","toLocaleString","maxWidth","react_chartjs_2_es","options","scales","xAxes","unitStepSize","time","suggestedMax","suggestedMin","distribution","scaleLabel","labelString","yAxes","ref","jobs_created","co2_saved","addSiteToProject","styles","SiteTypeList","setTimeout","scrollToComponent","offset","align","duration","category","chooseIcon","siteTypeItem","iconCategory","components_SiteTypeCategory_SiteTypeCategory","section","components_SiteTypeItem_SiteTypeItem","key","components_Results_Results","Map","bounds","center","lat","lng","isMarkerShown","showInfoWindow","activeMarker","selectedPlace","windowPosition","mapClicked","delayedShowMarker","refs","markers","onMapMounted","onBoundsChanged","getBounds","getCenter","onSearchBoxMounted","searchBox","onPlacesChanged","places","getPlaces","google","maps","LatLngBounds","forEach","place","geometry","viewport","union","extend","nextMarkers","nextCenter","_","fitBounds","lib","defaultZoom","handleClick","defaultOptions","streetViewControl","scaleControl","mapTypeControl","panControl","rotateControl","fullscreenControl","SearchBox","controlPosition","ControlPosition","TOP_LEFT","boxSizing","border","marginLeft","borderRadius","outline","textOverflow","React","withScriptjs","withGoogleMap","Geocode","setApiKey","AddSite","latLng","fromLatLng","formatted_address","handleToggleOpen","isOpen","siteTypeList","site_type_id","energy_budget","obj","componentWillReceiveProps","nextProps","textField","required","InputLabelProps","shrink","components_Map_Map","googleMapURL","loadingElement","containerElement","mapElement","onMarkerClick","handleMarkerClick","components_GeneratorForm_GeneratorForm","components_SiteTypeList_SiteTypeList","container","formControl","SavedSitePage","editing","new_budget","fundStartDateTemp","fundEndDateTemp","index","start_date","end_date","payoff_date","project_duration","marginBottom","paddingTop","site_name","borderBottom","paddingBottom","toISOString","substr","paddingLeft","toDateString","float","minHeight","SiteMarker","Hospital","Waves","Router","Security","Home","Restaurant","Business","Store","optimized","url","image","anchor","scaledSize","SitesMap","latitude","longitude","_this3","Marker","ProjectPage","currentIndex","siteSelect","handleAddSite","window","scrollTo","components_SitesMap_SitesMap","components_SavedSitePage_SavedSitePage","AddProject","projectName","user_id","image_url","UserDashboard","selectProject","handleAddProject","CardMedia_default","media","App","HashRouter","components_Nav_Nav","Switch","Redirect","exact","from","components_ProtectedRoute_ProtectedRoute","path","render","components_Footer_Footer","components_BugReport_BugReport","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","apply","run","ReactDOM","react_redux_es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.d4cd4755.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hospital.a28e40fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/business.9cb593d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.ebab5843.svg\";","module.exports = __webpack_public_path__ + \"static/media/restaurant.4fb66787.svg\";","module.exports = __webpack_public_path__ + \"static/media/router.013ab19d.svg\";","module.exports = __webpack_public_path__ + \"static/media/security.b1943b75.svg\";","module.exports = __webpack_public_path__ + \"static/media/store.59fc7bba.svg\";","module.exports = __webpack_public_path__ + \"static/media/waves.ec165121.svg\";","import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","const siteTypesReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_SITE_TYPES':\n        return action.payload;\n      case 'UNSET_USER':\n        return [];\n      case 'ADD_SITE_TO_PROJECT':\n        return [];\n      default:\n        return state;\n    }\n  };\n\n\nexport default siteTypesReducer;\n  ","const sites = (state = [], action) => {\n    switch (action.type) {\n      case 'ADD_SITE':\n        return [...state, action.payload];\n      case 'CLEAR_FORM':\n        return [];\n      case 'UNSET_USER':\n        return [];\n      default:\n        return state;\n    }\n  };\n\n// sites will be on the redux state at:\n// state.sites\n  export default sites;","const generator = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_GENERATOR':\n            return [...state, action.payload];\n        case 'CLEAR_FORM':\n            return [];\n      case 'UNSET_USER':\n          return [];\n        default:\n            return state;\n    }\n};\n\nexport default generator;","const selectedSite = (state = {}, action) => {\n    switch (action.type) {\n      case 'SET_SELECTED_SITE':\n        return action.payload;\n      case 'UNSET_USER':\n        return {};\n      case 'ADD_SITE_TO_PROJECT':\n        return {};\n      default:\n        return state;\n    }\n  };\n\n// sites will be on the redux state at:\n// state.sites\n  export default selectedSite;","import moment from 'moment';\n\nconst dieselCalculation = (state = {}, action) => {\n    switch (action.type) {\n        case 'RUN_DIESEL_CALCULATION':\n            let _start = moment(action.payload.sites[0].fundStartDate);\n            let _end = moment(action.payload.sites[0].fundEndDate);\n            let _duration = Number(_end.diff(_start, 'months'));\n            let dieselCost = 0;\n            for (let i = 0; i < action.payload.sites[0].siteGenerators.length; i++) {\n                dieselCost += Number(action.payload.sites[0].siteGenerators[i].monthlyCost);\n            }\n            let totalDieselCost = Number(_duration * dieselCost);\n            return {totalDieselCost: totalDieselCost, \n                timeToPayOff: action.payload.timeToPayOff,\n                payOffDate: action.payload.payOffDate, \n                payOffInTime: action.payload.payOffInTime,\n                timeline: action.payload.timeline\n            };\n        case 'UNSET_USER':\n          return {};\n        default:\n            return state;\n    }\n}\n\nexport default dieselCalculation;","const projectsReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_PROJECTS':\n        return action.payload;\n      case 'UNSET_USER':\n        return [];\n      default:\n        return state;\n    }\n  };\n\n\nexport default projectsReducer;","const projectId = (state = 0, action) => {\n    switch (action.type) {\n      case 'SELECT_PROJECT':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n\n// sites will be on the redux state at:\n// state.sites\n  export default projectId;","const project = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_PROJECT':\n        return action.payload;\n      case 'UNSET_USER':\n        return [];\n      default:\n        return state;\n    }\n  };\n\n\nexport default project;","const sitesByProject = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_SITES_BY_PROJECT':\n        return action.payload;\n      case 'UNSET_USER':\n        return [];\n      default:\n        return state;\n    }\n  };\n\n\nexport default sitesByProject;","const allSiteTypes = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_ALL_SITE_TYPES':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n\n\nexport default allSiteTypes;\n  ","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport siteTypes from './siteTypesReducer';\nimport sites from './addSiteReducer';\nimport generator from './generatorReducer';\nimport selectedSite from './selectedSiteReducer';\nimport dieselCalculation from './calculationReducer';\nimport projectsReducer from './projectsReducer';\nimport projectId from './projectIdReducer';\nimport project from './projectReducer';\nimport sitesByProject from './sitesByProjectReducer';\nimport allSiteTypes from './allSiteTypesReducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  siteTypes,\n  sites,\n  generator, // will have the list of generators the user has added to their site\n  selectedSite,\n  dieselCalculation, // will have the total amount of $ spent on diesel/energy fuel over period of time\n  projectsReducer, // will have all of the projects associated with a user\n  projectId, // will store current selected project id\n  project, // will store selected project \n  sitesByProject, // will store sites selected by project id\n  allSiteTypes, // will store site types for logged in users\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import axios from 'axios';\nimport { call, put, takeLatest } from 'redux-saga/effects';\n\nfunction* fetchSiteTypes(action) {\n  console.log('action.payload', action.payload);\n  \n  try {\n    const response = yield call(axios.get, `api/sitetypes/${action.payload}`);\n    yield put({ type: 'SET_SITE_TYPES', payload: response.data });\n  } catch (error) {\n    console.log('Site types get request failed', error);\n  }\n}\nfunction* fetchAllSiteTypes(action) {\n  console.log('action.payload', action.payload);\n  \n  try {\n    const response = yield call(axios.get, `api/sitetypes`);\n    yield put({ type: 'SET_ALL_SITE_TYPES', payload: response.data });\n  } catch (error) {\n    console.log('Site types get request failed', error);\n  }\n}\n\nfunction* siteTypesSaga() {\n  yield takeLatest('FETCH_SITE_TYPES', fetchSiteTypes);\n  yield takeLatest('FETCH_ALL_SITE_TYPES', fetchAllSiteTypes);\n}\n\nexport default siteTypesSaga;\n","import { put, takeLatest, select } from 'redux-saga/effects';\nimport moment from 'moment';\n\nfunction* setResults() {\n    try {\n        const sites = yield select(state => state.sites);\n        const selectedSite = yield select(state => state.selectedSite);\n        const generators = yield select(state => state.generator);\n        const startDate = moment(sites[0].fundStartDate);\n        const endDate = moment(sites[0].fundEndDate);\n        const timeline = endDate.diff(startDate,'months');\n        const timeToPayOff = selectedSite.total_price\n                /( generators.map(generator=>parseInt(generator.monthlyCost)).reduce((total,current)=>total+current) );\n        const payOffDate = startDate.add(timeToPayOff,'months');\n        const payOffInTime = payOffDate.isBefore(endDate);\n        console.log('selectedSite',selectedSite, 'generators',generators);\n        yield put({type: 'RUN_DIESEL_CALCULATION', payload: {sites, timeToPayOff, payOffDate, payOffInTime, timeline}});\n    } catch (error) {\n        console.log('Could not set results', error);\n    }\n}\n\nfunction* setResultsSaga() {\n    yield takeLatest('SET_SELECTED_SITE', setResults);\n}\n\nexport default setResultsSaga;","import axios from 'axios';\nimport { put, takeLatest, call } from 'redux-saga/effects';\n\nfunction* addProject(action) {\n\n  try {\n    yield call(axios.post, '/projects', action.payload);\n    yield put({type: 'GET_PROJECTS'})\n  } catch (error) {\n    console.log('error adding project', error);\n\n  }\n}\n\nfunction* getProjects(action) {\n\n    try {\n      const projects = yield axios.get(`/projects` );\n      yield put({ type: 'SET_PROJECTS', payload: projects.data });\n    } catch (error) {\n      console.log('Error getting projects:', error);\n    }\n\n}\n\nfunction* getProject(action) {\n  let id = action.payload\n  try {\n    const project = yield axios.get(`/projects/${id}`)\n    yield put({ type: 'SET_PROJECT', payload: project.data });\n\n  } catch (error) {\n    console.log('error getting projects:', error);\n  }\n}\n\nfunction* getSites(action) {\n  let id = action.payload\n  try {\n    const sites = yield axios.get(`/projects/sites/${id}`)\n    yield put({ type: 'SET_SITES_BY_PROJECT', payload: sites.data });\n\n  } catch (error) {\n    console.log('error getting projects:', error);\n  }\n}\n\n\n\nfunction* projectSaga() {\n  yield takeLatest('ADD_PROJECT', addProject);\n  yield takeLatest('GET_PROJECTS', getProjects);\n  yield takeLatest('GET_PROJECT', getProject);\n  yield takeLatest('GET_SITES_BY_PROJECT', getSites);\n}\n\nexport default projectSaga;","import axios from 'axios';\nimport { takeEvery, put } from 'redux-saga/effects';\n\nfunction* addSite(action) {\n    try{\n        console.log('Inside addSite function');\n        if(action.payload.project_id){\n            const results = yield axios.post('/projects/sites', action.payload);\n            const site_id = results.data.site_id;\n            console.log('site_id=',site_id);\n            yield axios.post(`/projects/generators/${site_id}`,action.payload.generators)\n            yield put({ type: 'GET_SITES_BY_PROJECT', payload: action.payload.project_id });\n        }\n    }catch(error){\n        console.log('Error adding site to project:',error);\n    }\n}\n\nfunction* addSiteSaga() {\n    yield takeEvery('ADD_SITE_TO_PROJECT', addSite);\n}\n\nexport default addSiteSaga;","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport siteTypesSaga from './siteTypesSaga';\nimport setResultsSaga from './setResultsSaga';\nimport projectSaga from './projectSaga';\nimport addSiteSaga from './addSiteSaga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    siteTypesSaga(),\n    setResultsSaga(),\n    projectSaga(),\n    addSiteSaga(),\n  ]);\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst LogOutButton = props => (\n  <button\n    // This button shows up in multiple locations and is styled differently\n    // because it's styled differently depending on where it is used, the className\n    // is passed to it from it's parents through React props\n    className={props.className}\n    onClick={() => props.dispatch({ type: 'LOGOUT' })}\n  >\n    Log Out\n  </button>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport LogOutButton from \"../LogOutButton/LogOutButton\";\nimport \"./Nav.css\";\n\nconst Nav = props => (\n  <div className=\"nav\">\n    <a href=\"https://www.footprintproject.org/\">\n      <img\n        id=\"footprint-logo\"\n        src=\"https://static1.squarespace.com/static/5b62523bc258b48b233cabe6/t/5c1839650e2e72ede043e555/1545094880372/?format=1500w\"\n        alt=\"logo\"\n      />\n    </a>\n    <div className=\"nav-right\">\n      <Link className=\"nav-link\" to=\"/dashboard\">\n        {/* Show this link if they are logged in or not,\n        but call this link 'Home' if they are logged in,\n        and call this link 'Login / Register' if they are not */}\n        {props.user.id ? \"Dashboard\" : \"Login / Register\"}\n      </Link>\n      {/* Show the link to the info page and the logout button if the user is logged in */}\n      {props.user.id && (\n        <>\n          <LogOutButton className=\"nav-link\" />\n        </>\n      )}\n      {!props.user.id && (\n        <Link className=\"nav-link\" to=\"/add_site\">\n          Try It!\n        </Link>\n      )}\n    </div>\n  </div>\n);\n\n// Instead of taking everything from state, we just want the user\n// object to determine if they are logged in\n// if they are logged in, we show them a few more links\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user }) => ({ user });\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(Nav);\n","import React, { Component } from 'react';\n// material ui imports\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\n// modal appears in middle of screen\nfunction getModalStyle() {\n  const top = 50\n  const left = 50\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\n// jss styles\nconst styles = theme => ({\n  paper: {\n    position: 'absolute',\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    textAlign: 'center',\n  },\n  button: {\n    margin: 10,\n  },\n});\n\nclass FloatingModal extends Component {\n  state = {\n    open: this.props.modalOpen,\n  };\n\n  render() {\n    // need this to use jss styles\n    const { classes } = this.props;\n\n    return (\n      <span>\n        {/* uses props to define button features */}\n        <Button\n          className={classes.button}\n          onClick={this.props.handleModalToggle}\n          variant=\"contained\"\n          color={this.props.color}\n          classes={{label: this.props.classes.label}}\n        >\n          {this.props.buttonText}\n        </Button>\n        {/* when modal is opened */}\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.props.modalOpen}\n          onClose={this.props.handleClose}\n        >\n          <div style={getModalStyle()} className={classes.paper}>\n            <Typography variant=\"h6\" id=\"modal-title\">\n              {this.props.title}\n            </Typography>\n            <br />\n            <form>\n              <div>\n                <TextField\n                  type=\"text\"\n                  label=\"Name\"\n                  variant=\"outlined\"\n                  value={this.props.state.name}\n                  onChange={this.props.handleChangeFor('name')}\n                />\n              </div>\n              <br />\n              <div>\n                <TextField\n                  type=\"text\"\n                  label=\"Email Address\"\n                  variant=\"outlined\"\n                  value={this.props.state.email}\n                  onChange={this.props.handleChangeFor('email')}\n                />\n              </div>\n              <br />\n              <div>\n                <TextField\n                  type=\"text\"\n                  label=\"Message\"\n                  variant=\"outlined\"\n                  multiline\n                  value={this.props.state.message}\n                  onChange={this.props.handleChangeFor('message')}\n                />\n              </div>\n              <br />\n              <Button\n                color={this.props.color}\n                variant=\"outlined\"\n                onClick={this.props.handleSubmit(this.props.subject)}\n              >\n                Submit\n            </Button>\n            </form>\n          </div>\n        </Modal>\n      </span>\n    );\n  }\n}\n\n// needed to use jss styles\nFloatingModal.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(FloatingModal);","import React, { Component } from 'react';\nimport './Footer.css';\n// to use modal\nimport FloatingModal from '../FloatingModal/FloatingModal';\n// alerts user that email was sent\nimport Snackbar from '@material-ui/core/Snackbar';\n// connect to redux state\nimport { connect } from 'react-redux';\n// allows axios requests\nimport axios from 'axios';\n\nclass Footer extends Component {\n\n  state = {\n    contactExpertOpen: false,\n    reportBugOpen: false,\n    snackbarOpen: false,\n    name: '',\n    email: '',\n    message: '',\n  };\n\n  // handles changes in input fields\n  handleChangeFor = propertyName => event => {\n    this.setState({\n      // saves whatever state previously was and only changes current TextField\n      ...this.state,\n      [propertyName]: event.target.value\n    });\n  }; // end handleChangeFor\n\n  // modal opens\n  handleContactExpertToggle = () => {\n    this.setState({\n      ...this.state,\n      contactExpertOpen: !this.state.contactExpertOpen,\n      reportBugOpen: false,\n    });\n  }; // end handleContactExpertToggle\n\n  // close modal\n  handleClose = () => this.setState({ ...this.state, contactExpertOpen: false, reportBugOpen: false });\n\n  // submits info entered in modal to email\n  handleSubmit = property => event => {\n    event.preventDefault();\n    axios.post('/email', {\n      content: { name: this.state.name, email: this.state.email, subject: property, message: this.state.message },\n      siteName: this.props.sites.length ? this.props.sites[0].siteName : 'Not entered',\n      fundStartDate: this.props.sites.length ? this.props.sites[0].fundStartDate : 'Not entered',\n      fundEndDate: this.props.sites.length ? this.props.sites[0].fundEndDate : 'Not entered',\n      location: this.props.sites.length ? this.props.sites[0].location : 'Not entered',\n      generator: this.props.generator.length ? this.props.generator[0] : 'Not entered',\n      selectedSite: this.props.selectedSite.type,\n      totalDieselCost: this.props.dieselCalculation.totalDieselCost || 0,\n      address: this.props.sites.length ? this.props.sites[0].address : 'Not entered',\n    }).then(() => {\n      this.setState({\n        name: '',\n        email: '',\n        message: '',\n        snackbarOpen: true,\n        reportBugOpen: false,\n        contactExpertOpen: false,\n      });\n    }).catch(error => console.log('Error in POST:', error));\n  }\n\n  render() {\n    return (\n      <footer>\n        <FloatingModal\n          buttonText=\"Contact Us\"\n          color=\"8BC34A\"\n          title=\"Please complete the following fields to send your solar estimate to a Footprint Project Representative. We will contact you soon!\"\n          state={this.state}\n          modalOpen={this.state.contactExpertOpen}\n          handleModalToggle={this.handleContactExpertToggle}\n          handleChangeFor={this.handleChangeFor}\n          handleSubmit={this.handleSubmit}\n          handleClose={this.handleClose}\n          subject=\"Solar Estimate\"\n          id=\"contact\"\n        />\n        <Snackbar\n          open={this.state.snackbarOpen}\n          message={<span id=\"message-id\">Email Sent</span>}\n          autoHideDuration={2000}\n          onClose={() => this.setState({ snackbarOpen: false })}\n        />\n      </footer>\n    );\n  }\n}\n\n// allows access to info in redux state\nconst mapStateToProps = state => ({\n    sites: state.sites,\n    selectedSite: state.selectedSite,\n    dieselCalculation: state.dieselCalculation,\n    generator: state.generator\n})\n\nexport default connect(mapStateToProps)(Footer);","import React, { Component } from 'react';\nimport './BugReport.css';\n// import floating modal for bug report\nimport FloatingModal from '../FloatingModal/FloatingModal';\n// snackbar for confirmation\nimport Snackbar from '@material-ui/core/Snackbar';\n// connect to redux\nimport { connect } from 'react-redux';\n// enable axios requests\nimport axios from 'axios';\n\nclass BugReport extends Component {\n\n  state = {\n    reportBugOpen: false,\n    snackbarOpen: false,\n    name: '',\n    email: '',\n    message: '',\n  };\n\n  // handles changes in input fields\n  handleChangeFor = propertyName => event => {\n    this.setState({\n      // saves whatever state previously was and only changes current TextField\n      ...this.state,\n      [propertyName]: event.target.value\n    });\n  }; // end handleChangeFor\n\n  // handles the modal open\n  handleReportBugToggle = () => {\n    this.setState({\n      ...this.state,\n      reportBugOpen: !this.state.reportBugOpen,\n      contactExpertOpen: false,\n    });\n  }; // end handleReportBugToggle\n\n  // closes modal\n  handleClose = () => this.setState({ ...this.state, contactExpertOpen: false, reportBugOpen: false });\n\n  // submits entered information in modal\n  handleSubmit = property => event => {\n    event.preventDefault();\n    axios.post('/email', {\n      content: { name: this.state.name, email: this.state.email, subject: property, message: this.state.message },\n      siteName: this.props.sites.length ? this.props.sites[0].siteName : 'Not entered',\n      fundStartDate: this.props.sites.length ? this.props.sites[0].fundStartDate : 'Not entered',\n      fundEndDate: this.props.sites.length ? this.props.sites[0].fundEndDate : 'Not entered',\n      location: this.props.sites.length ? this.props.sites[0].location : 'Not entered',\n      generator: this.props.generator.length ? this.props.generator[0] : 'Not entered',\n      selectedSite: this.props.selectedSite.type,\n      totalDieselCost: this.props.dieselCalculation.totalDieselCost || 0,\n      address: this.props.sites.length ? this.props.sites[0].address : 'Not entered',\n    }).then(() => {\n      this.setState({\n        name: '',\n        email: '',\n        message: '',\n        snackbarOpen: true,\n        reportBugOpen: false,\n      });\n    }).catch(error => alert('Error in POST:', error));\n  }\n\n  render() {\n    return (\n      <div className=\"bugReport\">\n        <FloatingModal\n          buttonText=\"Report A Bug\"\n          color=\"secondary\"\n          title=\"Please complete the following fields to report a bug to the Footprint Project team.\"\n          state={this.state}\n          modalOpen={this.state.reportBugOpen}\n          handleModalToggle={this.handleReportBugToggle}\n          handleChangeFor={this.handleChangeFor}\n          handleSubmit={this.handleSubmit}\n          handleClose={this.handleClose}\n          subject=\"Bug Report\"\n        />\n        <Snackbar\n          open={this.state.snackbarOpen}\n          message={<span id=\"message-id\">Email Sent</span>}\n          autoHideDuration={2000}\n          onClose={() => this.setState({ snackbarOpen: false })}\n        />\n      </div>\n    );\n  }\n}\n\n// allows access to information in redux state\nconst mapStateToProps = state => ({\n    sites: state.sites,\n    selectedSite: state.selectedSite,\n    dieselCalculation: state.dieselCalculation,\n    generator: state.generator\n})\n\nexport default connect(mapStateToProps)(BugReport);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { withRouter } from 'react-router-dom';\n\nclass LoginPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n      this.props.history.push('/dashboard')\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.errors.loginMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.loginMessage}\n          </h2>\n        )}\n        <form onSubmit={this.login}>\n          <h1>Login</h1>\n          <div>\n              <TextField\n                type=\"text\"\n                label=\"Email\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n          </div>\n          <div>      \n              <TextField\n                type=\"password\"\n                label=\"Password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n          </div>\n          <br />\n          <div>\n            <Button\n              className=\"log-in\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Log In\"\n              size=\"large\"\n              color=\"primary\"\n              variant=\"contained\"\n            >\n              Log In\n            </Button>\n          </div>\n        </form>\n        <br />\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_REGISTER_MODE'})}}\n          >\n            Register\n          </button>\n        </center>\n        <div id=\"bugSpacing\"></div>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default withRouter(connect(mapStateToProps)(LoginPage));","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport {withRouter} from 'react-router-dom';\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n      this.props.history.push('/dashboard')\n    } else {\n      this.props.dispatch({type: 'REGISTRATION_INPUT_ERROR'});\n    }\n  } // end registerUser\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.errors.registrationMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.registrationMessage}\n          </h2>\n        )}\n        <form onSubmit={this.registerUser}>\n          <h1>Register</h1>\n          <div>\n              <TextField\n                type=\"text\"\n                label=\"Email\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n          </div>\n          <div>      \n              <TextField\n                type=\"password\"\n                label=\"Password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n          </div>\n          <br />\n          <div>\n            <Button\n              className=\"register\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Register\"\n              size=\"large\"\n              color=\"primary\"\n              variant=\"contained\"\n            >\n              Register\n            </Button>\n          </div>\n        </form>\n        <br />\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_LOGIN_MODE'})}}\n          >\n            Login\n          </button>\n        </center>\n        <div id=\"bugSpacing\"></div>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default withRouter(connect(mapStateToProps)(RegisterPage));\n\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React, { Component } from 'react';\n// connect to redux state\nimport { connect } from 'react-redux';\n\nclass GeneratorList extends Component {\n    render() {\n        let totalCost = 0;\n        this.props.generator.map(newGen => totalCost += Number(newGen.monthlyCost));\n        return (\n            <div>\n                Total Monthly Energy Cost:\n                   ${totalCost.toFixed(2)}\n            </div>\n        )\n    }\n}\n\n// allows access to info in redux state\nconst mapStateToProps = state => ({\n    sites: state.sites,\n    generator: state.generator,\n});\n\nexport default connect(mapStateToProps)(GeneratorList);","import React, { Component } from 'react';\n// connect to redux\nimport { connect } from 'react-redux';\n// use GeneratorList\nimport GeneratorList from '../GeneratorList/GeneratorList';\n// material-ui imports\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n// snackbar for when generator is selected/energy budget added\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\n// jss styles\nconst styles = {\n    label: {\n        textTransform: 'capitalize',\n    },\n}\n\nclass GeneratorForm extends Component {\n\n    state = {\n        hasGenerator: false, // property relating to if the user has a generator\n        energyUsage: {\n            generatorSize: '',\n            energyUnit: '',\n            monthlyCost: '',\n        },\n        snackbarOpen: false,\n    }\n\n    // handles toggle switch for generator\n    handleHasGeneratorToggle = () => {\n        this.setState({\n            hasGenerator: !this.state.hasGenerator,\n            energyUsage: {\n                generatorSize: '',\n                energyUnit: '',\n                monthlyCost: '',\n            }\n        });\n    } // end handleHasGeneratorToggle\n\n    // handles changes in input fields\n    handleChangeFor = property => event => {\n        this.setState({\n            ...this.state,\n            energyUsage: {\n                ...this.state.energyUsage,\n                [property]: event.target.value,\n            },\n        });\n    } // end handleChangeFor\n\n    // handles adding an energy budget\n    handleAddEnergyUsage = event => {\n        event.preventDefault();\n        this.props.dispatch({\n            type: 'ADD_GENERATOR',\n            payload: this.state.energyUsage,\n        });\n        // reset inputs\n        this.setState({\n            energyUsage: {\n                generatorSize: '',\n                energyUnit: '',\n                monthlyCost: '',\n            },\n            snackbarOpen: true,\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <div>\n                    <InputLabel \n                        htmlFor={this.state.hasGenerator.toString()} \n                        style={{marginRight: '4vmin'}}\n                    >\n                        Do you currently have a generator?  \n                    </InputLabel>\n                    <FormControlLabel\n                        control={\n                            <RadioGroup\n                                style={{display: 'flex', flexDirection: 'row'}}\n                                className={classes.group}\n                                value={this.state.hasGenerator}\n                                onChange={this.handleHasGeneratorToggle}\n                            >\n                            <FormControlLabel value={true} control={<Radio />} label=\"Yes\" />\n                            <FormControlLabel value={false} control={<Radio />} label=\"No\" />\n                            </RadioGroup>\n                        }\n                    />\n                    <h4>\n                        If you don't have an existing generator enter your estimated monthly energy budget.  If you do have a generator(s) select 'Yes' and enter your generator specific information.\n                    </h4>\n                </div>\n                <br />\n                {this.state.hasGenerator && (\n                    <>\n                        <FormControl style={{ margin: 10 }}>\n                            <Input\n                                type=\"text\"\n                                placeholder=\"Enter Load Size\"\n                                value={this.state.energyUsage.generatorSize}\n                                onChange={this.handleChangeFor('generatorSize')}\n                            />\n                            <FormHelperText>Generator Size</FormHelperText>\n                        </FormControl>\n                        <FormControl style={{ margin: 10 }}>\n                            <Select\n                                value={this.state.energyUsage.energyUnit}\n                                onChange={this.handleChangeFor('energyUnit')}\n                            >\n                                <MenuItem value=\"\" disabled>--Select Energy Unit--</MenuItem>\n                                <MenuItem value=\"kVA\">kVA</MenuItem>\n                                <MenuItem value=\"kW\">kW</MenuItem>\n                            </Select>\n                            <FormHelperText>Generator Energy Unit</FormHelperText>\n                        </FormControl>\n                        <br />\n                        <FormControl style={{ margin: 10 }}>\n                            <Input\n                                type=\"text\"\n                                placeholder=\"USD $\"\n                                value={this.state.energyUsage.monthlyCost}\n                                onChange={this.handleChangeFor('monthlyCost')}\n                            />\n                            <FormHelperText>Monthly Fuel Cost</FormHelperText>\n                        </FormControl>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={this.handleAddEnergyUsage}\n                        >\n                            Add Generator\n                    </Button>\n                        {this.props.generator.length > 0 && <GeneratorList />}\n                    </>\n                )}\n                {!this.state.hasGenerator && (\n                    <>\n                        <FormControl style={{ margin: 10 }}>\n                            <Input\n                                type=\"text\"\n                                placeholder=\"USD $\"\n                                value={this.state.energyUsage.monthlyCost}\n                                onChange={this.handleChangeFor('monthlyCost')}\n                            />\n                            <FormHelperText>Total Monthly Energy Budget</FormHelperText>\n                        </FormControl>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={this.handleAddEnergyUsage}\n                            classes={{label: classes.label}}\n                        >\n                            Add Monthly Energy Budget\n                        </Button>\n                        {this.props.generator.length > 0 && <GeneratorList />}\n                    </>\n                )}\n                <Snackbar\n                    open={this.state.snackbarOpen}\n                    message={<span id=\"message-id\">Energy Budget Added</span>}\n                    autoHideDuration={2000}\n                    onClose={() => this.setState({ snackbarOpen: false })}\n                />\n            </div>\n        )\n    }\n}\n\n// needed for jss styles\nGeneratorForm.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n// allows access to info in redux state\nconst mapStateToProps = state => ({\n    sites: state.sites,\n    generator: state.generator,\n});\n\nexport default withStyles(styles)(connect(mapStateToProps)(GeneratorForm));","import React, { Component } from 'react';\n// material-ui imports\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n// jss styles\nconst styles = {\n    card: {\n        marginTop: 15,\n        width: 260,\n        height: 335,\n        textAlign: 'center',\n        backgroundColor: 'AliceBlue',\n    },\n    icon: {\n        margin: 2,\n        fontSize: 50,\n        textAlign: 'center',\n    },\n    button: {\n        width: '100%',\n        margin: 'auto',\n    },\n};\n\nclass SiteTypeItem extends Component {\n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            // hovering over each card will bring up tooltip with description, props for card icon passed down from SiteTypeList\n            <div className=\"toolTip\">\n                <span className=\"toolTipText\">{this.props.site.description}</span>\n                <Card className={classes.card} >\n                    <CardContent>\n                        <Typography>\n                            {this.props.icon}\n                        </Typography>\n                        <Typography variant=\"h6\">\n                            <strong>{this.props.site.type}</strong>\n                        </Typography>\n                        <br />\n                        <div>\n                            <p className=\"siteDescription\">Power Needs: {this.props.site.power_need} kWh/day</p>\n                            <p className=\"siteDescription\">Panel Array: {this.props.site.solar_panel} kW</p>\n                            <p className=\"siteDescription\">Storage: {this.props.site.battery_bank} kWh</p>\n                            {\n                                this.props.site.generator ?\n                                    <p className=\"siteDescription\">Generator: {this.props.site.generator} kW</p>\n                                    :\n                                    <p className=\"siteDescription\">Generator: None</p>\n                            }\n                        </div>\n                    </CardContent>\n                    <CardActions>\n                        <div className={classes.button}>\n                            {/* clicking button sends site to redux state for calculations */}\n                            <Button\n                                size=\"large\"\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                onClick={() => this.props.selectSite(this.props.site)}\n                            >\n                                Select This Site\n                            </Button>\n                        </div>\n                    </CardActions>\n                    <br />\n                </Card>\n            </div>\n        );\n    }\n}\n\n// needed for jss styles\nSiteTypeItem.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SiteTypeItem);","import React, { Component } from 'react';\n// material-ui imports\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n// jss styles\nconst styles = {\n    card: {\n        marginTop: 20,\n        width: 260,\n        height: 210,\n        textAlign: 'center',\n    },\n    button: {\n        width: '100%',\n        margin: 'auto',\n    },\n}\n\n\nclass SiteTypeCategoryCard extends Component {\n\n\n    render() {\n\n        const { classes } = this.props;\n\n        return(\n            <div>\n                {/* card styling for each site type category, takes in props for content from SiteTypeCategory component */}\n                <Card className={classes.card} style={this.props.color}>\n                    <CardContent>\n                        <Typography>\n                            {this.props.icon}\n                        </Typography>\n                        <Typography variant=\"h5\">\n                            {this.props.title}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <div className={classes.button}>\n                            <Button      \n                                size=\"large\" \n                                variant=\"outlined\" \n                                color=\"primary\" \n                                onClick={() => {this.props.selectSiteCategory(this.props.title); this.props.toggleColor()}}\n                                >\n                                Select\n                            </Button>\n                        </div>\n                    </CardActions>\n                    <br />\n                </Card>\n            </div>\n        );\n    }\n}\n\n// needed for jss styles\nSiteTypeCategoryCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SiteTypeCategoryCard);","import React, { Component } from 'react';\n// material-ui imports\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\nimport RouterIcon from '@material-ui/icons/Router';\nimport SiteTypeCategoryCard from '../SiteTypeCategoryCard/SiteTypeCategoryCard';\nimport WavesIcon from '@material-ui/icons/Waves';\nimport SecurityIcon from '@material-ui/icons/Security';\nimport HomeIcon from '@material-ui/icons/Home';\nimport StoreIcon from '@material-ui/icons/Store';\n\n// jss styles\nconst styles = {\n    icon: {\n        fontSize: 70,\n        textAlign: 'center',\n    },\n    cardDiv: {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-evenly',\n    }\n};\n\nclass SiteTypeCategory extends Component {\n\n    state = {\n        active: null,\n    }\n\n    // toggles card color on click of site type category\n    toggleColor = (position) => {\n        if (this.state.active === position) {\n          this.setState({active : null})\n        } else {\n          this.setState({active : position})\n        }\n      }\n      \n      // card turns this color\n      myColor = (position) => {\n        if (this.state.active === position) {\n          return \"MediumAquaMarine\";\n        }\n        return \"\";\n      }\n\n\n    render() {\n\n        const { classes } = this.props;\n\n        // save icon as a variable to pass it through props\n        const hospitalIcon = <LocalHospitalIcon className={classes.icon} />\n        const waterIcon = <WavesIcon className={classes.icon} />\n        const commsIcon = <RouterIcon className={classes.icon} />\n        const opsIcon = <SecurityIcon className={classes.icon} />\n        const adminIcon = <BusinessCenterIcon className={classes.icon} />\n        const shelterIcon = <HomeIcon className={classes.icon} />\n        const foodIcon = <RestaurantIcon className={classes.icon} />\n        const logsIcon = <StoreIcon className={classes.icon} />\n\n        return (\n            <div className={classes.cardDiv}>\n                {/* site type category cards */}\n                <SiteTypeCategoryCard \n                    icon={hospitalIcon}\n                    title=\"Health\"\n                    selectSiteCategory={this.props.selectSiteCategory}\n                    color={{background: this.myColor(0)}} \n                    toggleColor={() => {this.toggleColor(0)}}\n                />\n                <SiteTypeCategoryCard \n                    icon={waterIcon}\n                    title=\"Water\"\n                    selectSiteCategory={this.props.selectSiteCategory}\n                    color={{background: this.myColor(1)}} \n                    toggleColor={() => {this.toggleColor(1)}}\n                />\n                <SiteTypeCategoryCard \n                    icon={commsIcon}\n                    title=\"Comms\"\n                    selectSiteCategory={this.props.selectSiteCategory}\n                    color={{background: this.myColor(2)}} \n                    toggleColor={() => {this.toggleColor(2)}}\n                />\n                <SiteTypeCategoryCard \n                    icon={opsIcon}\n                    title=\"Ops\"\n                    selectSiteCategory={this.props.selectSiteCategory}\n                    color={{background: this.myColor(3)}} \n                    toggleColor={() => {this.toggleColor(3)}}\n                />\n                <SiteTypeCategoryCard \n                    icon={shelterIcon}\n                    title=\"Shelter\"\n                    selectSiteCategory={this.props.selectSiteCategory}\n                    color={{background: this.myColor(4)}} \n                    toggleColor={() => {this.toggleColor(4)}}\n                />\n                <SiteTypeCategoryCard \n                    icon={foodIcon}\n                    title=\"Food\"\n                    selectSiteCategory={this.props.selectSiteCategory}\n                    color={{background: this.myColor(5)}} \n                    toggleColor={() => {this.toggleColor(5)}}\n                />\n                <SiteTypeCategoryCard \n                    icon={adminIcon}\n                    title=\"Admin\"\n                    selectSiteCategory={this.props.selectSiteCategory}\n                    color={{background: this.myColor(6)}} \n                    toggleColor={() => {this.toggleColor(6)}}\n                />\n                <SiteTypeCategoryCard \n                    icon={logsIcon}\n                    title=\"Logs\"\n                    selectSiteCategory={this.props.selectSiteCategory}\n                    color={{background: this.myColor(7)}} \n                    toggleColor={() => {this.toggleColor(7)}}\n                />\n            </div>\n        );\n    }\n}\n\n// needed for jss styles\nSiteTypeCategory.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SiteTypeCategory);","import React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport FloatingModal from '../FloatingModal/FloatingModal';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\nlet start = '2014-12-30T18:06:17.762Z';\nlet end = '2020-01-05T18:06:17.762Z';\n\nconst styles = {\n    label: {\n        textTransform: 'capitalize',\n        fontSize: 25,\n    },\n    // button: {\n    //     margin: 'auto',\n    //     height: '5.4vmax',\n    //     width: '28vmax',\n    // },\n}\n\nclass Results extends Component {\n\n    state = {\n        open: false,\n        contactExpertOpen: false,\n        snackbarOpen: false,\n        name: '',\n        email: '',\n        message: '',\n    }\n\n    handleChange = property => event => this.setState({ [property]: event.target.value });\n\n    handleContactExpertToggle = () => {\n        this.setState({\n            ...this.state,\n            contactExpertOpen: !this.state.contactExpertOpen,\n            reportBugOpen: false,\n        });\n    };\n\n    handleClose = () => this.setState({ ...this.state, contactExpertOpen: false, reportBugOpen: false });\n\n\n    handleSubmit = property => event => {\n        event.preventDefault();\n        axios.post('/email', {\n            content: { name: this.state.name, email: this.state.email, subject: property, message: this.state.message },\n            siteName: this.props.sites.length ? this.props.sites[0].siteName : 'Not entered',\n            fundStartDate: this.props.sites.length ? this.props.sites[0].fundStartDate : 'Not entered',\n            fundEndDate: this.props.sites.length ? this.props.sites[0].fundEndDate : 'Not entered',\n            location: this.props.sites.length ? this.props.sites[0].location : 'Not entered',\n            generator: this.props.generator.length ? this.props.generator[0] : 'Not entered',\n            selectedSite: this.props.selectedSite.type,\n            totalDieselCost: this.props.dieselCalculation.totalDieselCost || 0,\n            address: this.props.sites.length ? this.props.sites[0].address : 'Not entered',\n        }).then(() => {\n            this.setState({\n                name: '',\n                email: '',\n                message: '',\n                snackbarOpen: true,\n                reportBugOpen: false,\n                contactExpertOpen: false,\n            });\n        }).catch(error => console.log('Error in POST:', error));\n    }\n\n\n    render() {\n        const { classes } = this.props;\n\n        const datasets = [{\n            label: 'Time to cover initial solar grid investment',\n            data: [{ //these values will be set dynamically when user enters info. \n                //We added default start/end dates and starting price\n                x: this.props.sites.length ? new Date(this.props.sites[0].fundStartDate) : start,\n                y: this.props.selectedSite.total_price || 25000\n            }, {\n                x: this.props.dieselCalculation.payOffDate,\n                y: 0\n            }],\n            backgroundColor: this.props.dieselCalculation.payOffInTime ? [\n                'rgb(0,0,255,0.7)'\n            ] : [\n                    '#DC143C'\n                ],\n            borderColor: [\n                'rgb(0,0,255)'\n            ],\n            borderWidth: 1,\n\n        }, {\n            label: 'Solar energy savings',\n            data: [{\n                x: this.props.dieselCalculation.payOffInTime ?\n                    this.props.dieselCalculation.payOffDate : new Date(this.props.sites[0].fundStartDate),\n                y: 0\n            }, {\n                x: this.props.sites.length ? this.props.sites[0].fundEndDate : end,\n                y: this.props.dieselCalculation.payOffInTime ? //the savings is just (dieselCost - totalPrice)\n                    this.props.dieselCalculation.totalDieselCost - this.props.selectedSite.total_price : 0\n                    //if the payoff date is after the funding end date, we set the y-value to 0 as a way  \n                    //of \"hiding\" that part of the graph \n            }],\n            backgroundColor: [\n                '#228b22'\n            ],\n            borderColor: [\n                '#228b22'\n            ],\n            borderWidth: 1\n        }, {\n            label: 'Cost of Diesel',\n            data: [{\n                x: this.props.sites.length ? this.props.sites[0].fundStartDate : start,\n                y: 0\n            }, {\n                x: this.props.sites.length ? this.props.sites[0].fundEndDate : end,\n                y: this.props.dieselCalculation.totalDieselCost || 35000 //35000 is just a default value\n            }],\n            backgroundColor: [\n                'rgb(128,128,128,0.7)'\n            ],\n            borderColor: [\n                'grey'\n            ],\n            borderWidth: 1,\n        }]\n\n        const options = {\n            scales: {\n                xAxes: [{\n                    type: 'time',\n                    unitStepSize: 1,\n                    time: {\n                        unit: 'year',\n                        suggestedMax: '2020-01-05T18:06:17.762Z',\n                        suggestedMin: '2014-12-30T18:06:17.762Z',\n                    },\n                    distribution: 'linear',\n                    scaleLabel: {\n                        display: true,\n                        labelString: 'Project Timeline',\n                        fontSize: 22,\n                    }\n                }],\n                yAxes: [{\n                    scaleLabel: {\n                        display: true,\n                        labelString: 'Energy Costs',\n                        fontSize: 22,\n                    }\n                }]\n            },\n        };\n\n        return (<div>\n            <h2 className=\"heading\">Results</h2>\n            {this.props.dieselCalculation.payOffInTime &&\n                <div className=\"center\">\n                    <h2 style={{ color: 'LimeGreen' }}>Total Savings: ${parseInt(this.props.dieselCalculation.totalDieselCost - this.props.selectedSite.total_price).toLocaleString()}</h2>\n                </div>}\n            <div style={{ maxWidth: \"65%\", margin: \"auto\" }}>\n                <Line data={{ datasets: datasets }} options={options} ref=\"linegraph\" />\n            </div>\n            {this.props.dieselCalculation.payOffInTime ?\n                <div className=\"center\" style={{ color: 'LimeGreen' }}>\n                    <h3>Time to pay off: <strong style={{ color: 'MediumTurquoise' }}>{parseInt(this.props.dieselCalculation.timeToPayOff)} months</strong></h3>\n                    <h3>Total Savings: <strong style={{ color: 'MediumTurquoise' }}>${parseInt(this.props.dieselCalculation.totalDieselCost - this.props.selectedSite.total_price).toLocaleString()}</strong></h3>\n                    <h3>Jobs Created: <strong style={{ color: 'MediumTurquoise' }}>{this.props.selectedSite.jobs_created}</strong></h3>\n                    <h3>Total Co2 Saved: <strong style={{ color: 'MediumTurquoise' }}>{this.props.selectedSite.co2_saved.toLocaleString()} lbs</strong></h3>\n                </div>\n                :\n                <h3 className=\"center\" style={{ color: 'DarkRed' }}>Monthly Budget Needed To Pay Off In Time: ${parseInt(this.props.selectedSite.total_price / this.props.dieselCalculation.timeline).toLocaleString()}</h3>}\n            <br />\n            <div className=\"center\">\n\n                {this.props.user.id && this.props.selectedSite.id &&\n                    <Button value=\"submit\"\n                        type=\"submit\" variant=\"contained\" color=\"primary\"\n                        classes={{label: classes.label}}\n                        className={classes.button} onClick={this.props.addSiteToProject}>\n                        <span styles={{fontSize: '40vw'}}>\n                            Add to Project\n                        </span>\n                    </Button>}\n\n                <FloatingModal\n                    buttonText=\"Contact the Experts\"\n                    color=\"primary\"\n                    title=\"Please complete the following fields to send your solar estimate to a Footprint Project Representative. We will contact you soon!\"\n                    state={this.state}\n                    modalOpen={this.state.contactExpertOpen}\n                    handleModalToggle={this.handleContactExpertToggle}\n                    handleChangeFor={this.handleChange}\n                    handleSubmit={this.handleSubmit}\n                    handleClose={this.handleClose}\n                    subject=\"Solar Estimate\"\n                    classes={{ label: classes.label }}\n                />\n            </div>\n            <div className=\"subHeading\">\n                <p>\n                    This is an estimate of the costs/benefits of using solar power at your site. There are purchase, lease, and renting options available.\n                    Please click the \"Contact The Experts\" button to send your estimate and email address to a Footprint Project representative. We will contact\n                    promptly with more details and information about how to make your project sustainable!\n                </p>\n            </div>\n\n            <br />\n            <br />\n            <Snackbar\n                open={this.state.snackbarOpen}\n                message={<span id=\"message-id\">Email Sent</span>}\n                autoHideDuration={2000}\n                onClose={() => this.setState({ snackbarOpen: false })}\n            />\n        </div>)\n    }\n}\n\nResults.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    sites: state.sites,\n    selectedSite: state.selectedSite,\n    dieselCalculation: state.dieselCalculation,\n    generator: state.generator,\n    project_id: state.projectId,\n    user: state.user,\n});\n\n\nexport default withStyles(styles)(connect(mapStateToProps)(Results));","import React, { Component } from 'react';\n// import SiteTypeItem, SiteTypeCategory, and Results components\nimport SiteTypeItem from '../SiteTypeItem/SiteTypeItem';\nimport SiteTypeCategory from '../SiteTypeCategory/SiteTypeCategory';\nimport Results from '../Results/Results';\n// connect to redux state\nimport { connect } from 'react-redux';\n// material-ui imports\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\nimport RouterIcon from '@material-ui/icons/Router';\nimport WavesIcon from '@material-ui/icons/Waves';\nimport SecurityIcon from '@material-ui/icons/Security';\nimport HomeIcon from '@material-ui/icons/Home';\nimport StoreIcon from '@material-ui/icons/Store';\n// import for forced scrolling\nimport scrollToComponent from 'react-scroll-to-component';\n// snackbar for site selection\nimport Snackbar from '@material-ui/core/Snackbar';\n\n// jss styles\nconst styles = {\n    card: {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-evenly',\n        margin: 10,\n    },\n}\n\nclass SiteTypeList extends Component {\n\n    state = {\n        icon: '',\n        snackbarOpen: false,\n    }\n\n    // handles select of site, forces scroll to results component, and opens snackbar\n    selectSite = site => {\n        this.props.dispatch({ type: 'SET_SELECTED_SITE', payload: site });\n        setTimeout(() => scrollToComponent(this.results, { offset: 0, align: 'top', duration: 750 }), 200);\n        this.setState({ \n            ...this.state,\n            snackbarOpen: true, \n        });\n    } // end selectSite\n\n    // handles select of site category, forces scroll to site types\n    selectSiteCategory = category => {\n        this.props.dispatch({ type: 'FETCH_SITE_TYPES', payload: category });\n        this.setState({\n            icon: this.chooseIcon(category),\n        });\n        setTimeout(() => scrollToComponent(this.siteTypeItem, { offset: 0, align: 'top', duration: 750 }), 200);\n    }\n\n    // based on category, selects the appropriate icon for the site type cards\n    chooseIcon = iconCategory => {\n        switch (iconCategory) {\n            case 'Health':\n                return <LocalHospitalIcon />\n            case 'Water':\n                return <WavesIcon />\n            case 'Comms':\n                return <RouterIcon />\n            case 'Ops':\n                return <SecurityIcon />\n            case 'Shelter':\n                return <HomeIcon />\n            case 'Food':\n                return <RestaurantIcon />\n            case 'Admin':\n                return <BusinessCenterIcon />\n            case 'Logs':\n                return <StoreIcon />\n            default:\n                return null;\n        }\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <h2 className=\"heading\">Select Site Category</h2>\n                <h3 className=\"subHeading\">Scroll down to see site type options</h3>\n                <div>\n                    <SiteTypeCategory\n                        selectSiteCategory={this.selectSiteCategory}\n                    />\n                </div>\n                {/* scrolls to here when a category is selected */}\n                <section className='siteTypeItem' ref={(section) => { this.siteTypeItem = section; }}>\n                <div className={classes.card}>\n                    {this.props.siteTypes.map(site => {\n                        return <SiteTypeItem\n                            site={site}\n                            key={site.id}\n                            selectSite={this.selectSite}\n                            icon={this.state.icon}\n                        />\n                    }\n                    )}\n                </div>\n                </section>\n                <br />\n                <br />\n                {\n                    this.props.selectedSite.id &&\n                    // scrolls here upon selecting a site\n                    <section className='results' ref={(section) => { this.results = section; }}>\n                        <Results  \n                        addSiteToProject={this.props.addSiteToProject}\n                        />\n                    </section>\n                }\n                <div>\n                    {/* snackbar for site select */}\n                    <Snackbar\n                        open={this.state.snackbarOpen}\n                        message={<span id=\"message-id\">Site Selected</span>}\n                        autoHideDuration={2000}\n                        onClose={() => this.setState({ snackbarOpen: false })}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\n// needed for jss styles\nSiteTypeList.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n// allows component to access redux state for information\nconst mapStateToProps = state => {\n    return {\n        siteTypes: state.siteTypes,\n        selectedSite: state.selectedSite,\n    }\n}\n\nexport default withStyles(styles)(connect(mapStateToProps)(SiteTypeList));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withScriptjs, withGoogleMap, GoogleMap } from 'react-google-maps';\nimport { SearchBox } from 'react-google-maps/lib/components/places/SearchBox';\nimport _ from 'lodash';\nimport { Marker } from 'react-google-maps';\n/* global google */\n\nclass Map extends React.Component {\n  state = {\n    bounds: null,\n    center: {\n      lat: 40, lng: 45\n    },\n    isMarkerShown: false,\n    showInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {},\n    windowPosition: null,\n    mapClicked: false,\n  }\n\n  componentWillMount() {\n    const refs = {}\n\n    this.setState({\n      bounds: null,\n      center: {\n        lat: 40, lng: 45\n      },\n      markers: [],\n      onMapMounted: ref => {\n        refs.map = ref;\n      },\n      onBoundsChanged: () => {\n        this.setState({\n          bounds: refs.map.getBounds(),\n          center: refs.map.getCenter(),\n        })\n      },\n      onSearchBoxMounted: ref => {\n        refs.searchBox = ref;\n      },\n      onPlacesChanged: () => {\n        const places = refs.searchBox.getPlaces();\n        const bounds = new google.maps.LatLngBounds();\n\n        places.forEach(place => {\n          if (place.geometry.viewport) {\n            bounds.union(place.geometry.viewport)\n          } else {\n            bounds.extend(place.geometry.location)\n          }\n        });\n        const nextMarkers = places.map(place => ({\n          position: place.geometry.location,\n        }));\n        const nextCenter = _.get(nextMarkers, '0.position', this.state.center);\n\n        this.setState({\n          center: nextCenter,\n          markers: nextMarkers,\n        });\n        refs.map.fitBounds(bounds);\n      },\n    })\n  }\n\n  componentDidMount() {\n    this.delayedShowMarker()\n  }\n\n  delayedShowMarker = () => {\n    setTimeout(() => {\n      this.setState({ isMarkerShown: true })\n    }, 3000)\n  }\n\n  render() {\n    return (\n      <div>\n        <GoogleMap\n          ref={this.state.onMapMounted}\n          defaultZoom={2.2}\n          center={this.state.center}\n          onClick={this.props.handleClick}\n          onBoundsChanged={this.props.onBoundsChanged}\n          defaultOptions={{\n            // these following 7 options turn certain controls off see link below\n            streetViewControl: false,\n            scaleControl: false,\n            mapTypeControl: false,\n            panControl: false,\n            // zoomControl: false,\n            rotateControl: false,\n            fullscreenControl: false}}>\n              < SearchBox\n            ref={ this.state.onSearchBoxMounted }\n            bounds={ this.state.bounds }\n            controlPosition={ google.maps.ControlPosition.TOP_LEFT }\n            \n            onPlacesChanged={ this.state.onPlacesChanged } >\n            <input\n              type=\"text\"\n              placeholder=\"Enter Site Location\"\n              style={{\n                boxSizing: `border-box`,\n                border: `1px solid transparent`,\n                width: `80%`,\n                height: `6%`,\n                marginTop: `5%`,\n                marginLeft: '10%',\n                padding: `0 12px`,\n                borderRadius: `3px`,\n                boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n                fontSize: `2vmin`,\n                outline: `none`,\n                textOverflow: `ellipses`,\n              }}\n            />\n          </SearchBox>\n        {this.props.mapClicked && <Marker position={this.props.location} />}\n        </GoogleMap>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  state: state,\n});\n\nexport default connect(mapStateToProps)(withScriptjs(withGoogleMap(Map)))","import React, { Component } from 'react';\n// connect to redux state\nimport { connect } from 'react-redux';\n// import GeneratorForm and SiteTypeList so we can force scroll to them\nimport GeneratorForm from '../GeneratorForm/GeneratorForm';\nimport SiteTypeList from '../SiteTypeList/SiteTypeList';\n// map imports\nimport Map from '../Map/Map'\nimport Geocode from \"react-geocode\";\n// material-ui imports\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n// import css\nimport './AddSite.css';\n// forced scrolling package\nimport scrollToComponent from 'react-scroll-to-component';\n// Set Google Maps API Key\nGeocode.setApiKey(\"AIzaSyCZv9A4Vtnra6r04z9JnNk91zeXwX82O68\");\n\n// jss styles\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing.unit,\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 200,\n    },\n});\n\n\nclass AddSite extends Component {\n\n    state = {\n        siteName: '',\n        fundStartDate: '',\n        fundEndDate: '',\n        location: {\n            lat: 0,\n            lng: 0,\n        },\n        mapClicked: false,\n        address: '',\n    }\n\n    // handles clicking on map, sets lat and long\n    handleClick = event => {\n        this.setState({\n            location: { lat: event.latLng.lat(), lng: event.latLng.lng() },\n            mapClicked: true,\n        });\n        // Get Address from Lat/Long Coordinates\n        Geocode.fromLatLng(this.state.location.lat, this.state.location.lng).then(\n            response => {\n                const address = response.results[0].formatted_address;\n                this.setState({\n                    address: address,\n                })\n            },\n            error => {\n                console.error(error);\n                alert('There was an error, please refresh or contact us');\n            }\n        );\n    } // end handleClick\n\n    handleToggleOpen = () => {\n        this.setState({\n            isOpen: !this.state.isOpen,\n        });\n    };\n\n    // handles changes in input fields\n    handleChange = property => event => {\n        this.setState({\n            ...this.state,\n            [property]: event.target.value\n        })\n    } // end handleChange\n\n    // handles adding a new site\n    handleSubmit = event => {\n        event.preventDefault();\n        this.props.dispatch({\n            type: 'ADD_SITE', payload: { ...this.state, siteGenerators: this.props.generator }\n        });\n        // force scrolls to SiteTypeList\n        setTimeout(() => scrollToComponent(this.siteTypeList, { offset: 0, align: 'top', duration: 750 }), 200);\n    } // end handleSubmit\n\n    // adds site to project\n    addSiteToProject = () => {\n        this.props.dispatch({\n            type: 'ADD_SITE_TO_PROJECT',\n            payload: {\n                state: this.state,\n                project_id: this.props.project_id,\n                site_type_id: this.props.selectedSite.id,\n                generators: this.props.generator,\n                energy_budget: this.props.generator.map(obj => parseInt(obj.monthlyCost)\n                ).reduce((total, current) => total + current)\n            }\n        });\n        this.props.dispatch({type: 'CLEAR_FORM'});\n    }\n    componentWillReceiveProps = (nextProps) => {\n        if (nextProps.sitesByProject.length > this.props.sitesByProject.length) {\n            this.props.history.push('/project');\n            console.log('Tried to push to project view!');\n            \n        }\n    } // end addSiteToProject\n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n\n            <div>\n                <h2 className=\"heading\">Transition Tool</h2>\n                <div className=\"subHeading\">\n                    <h3>This tool is for users with off-grid power needs who are exploring on-site solar plus storage.\n                        Based on the length of your project, monthly power budgets and site electrical loads,\n                        solar plus storage may be the right option for you!</h3>\n                </div>\n                <div className=\"siteForm\">\n                    <br />\n                    <form onSubmit={this.handleSubmit}>\n                        <h4 id=\"siteFormHeader\">Enter Site Information</h4>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label=\"Site Name\"\n                                className={classes.textField}\n                                value={this.state.siteName}\n                                required\n                                onChange={this.handleChange('siteName')}\n                                margin=\"normal\"\n                            />\n                        </div>\n                        <br />\n                        <TextField\n                            id=\"date\"\n                            label=\"Funding Start Date\"\n                            type=\"date\"\n                            onChange={this.handleChange('fundStartDate')}\n                            className={classes.textField}\n                            value={this.state.fundStartDate}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            required\n                        />\n                        <TextField\n                            id=\"date\"\n                            label=\"Funding End Date\"\n                            type=\"date\"\n                            onChange={this.handleChange('fundEndDate')}\n                            className={classes.textField}\n                            value={this.state.fundEndDate}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            required\n                        />\n                        <div className=\"map\">\n                            <h4>Search by Country and click on map below to set site location.</h4>\n                            <h4>Latitude: {this.state.location.lat} <br></br> Longitude: {this.state.location.lng}</h4>\n                            {/* google map */}\n                            <Map\n                                googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCZv9A4Vtnra6r04z9JnNk91zeXwX82O68&v=3.exp&libraries=geometry,drawing,places\"\n                                loadingElement={<div style={{ height: `100%` }} />}\n                                containerElement={<div style={{ height: `80vmin`, width: '80vmin', margin: 'auto', }} />}\n                                mapElement={<div style={{ height: `100%` }} />}\n                                isMarkerShown={this.state.isMarkerShown}\n                                onMarkerClick={this.handleMarkerClick}\n                                handleToggleOpen={this.handleToggleOpen}\n                                isOpen={this.state.isOpen}\n                                onClick={this.handleClick}\n                                location={this.state.location}\n                                handleClick={this.handleClick}\n                                mapClicked={this.state.mapClicked}\n                            />\n                        </div>\n                        <br />\n                        <br />\n                        <br />\n                        <GeneratorForm />\n                        <br />\n                        <br />\n                        {this.props.generator.length > 0 &&\n                            <Button\n                                value=\"submit\"\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.button}\n                            >\n                                Choose Site Type\n                        </Button>}\n                        <br />\n                        <br />\n                        <br />\n                        <br />\n                    </form>\n                </div>\n                <br />\n\n\n                <br />\n                <br />\n                {\n                    this.props.sites.length > 0 &&\n                    <section className='siteTypeList' ref={(section) => { this.siteTypeList = section; }}>\n                        <SiteTypeList  \n                        addSiteToProject={this.addSiteToProject}\n                        />\n                    </section>\n                }\n            </div>\n\n        );\n    }\n}\n\n// access to redux state\nconst mapStateToProps = state => ({\n    sites: state.sites,\n    sitesByProject: state.sitesByProject,\n    generator: state.generator,\n    selectedSite: state.selectedSite,\n    project_id: state.projectId,\n    user: state.user,\n});\n\n// needed for jss styles\nAddSite.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(connect(mapStateToProps)(AddSite));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Line } from 'react-chartjs-2';\nimport moment from 'moment';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing.unit,\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 200,\n    },\n});\n\nclass SavedSitePage extends Component {\n\n    state = {\n        energy_budget: this.props.energy_budget,\n        editing: false,\n        new_budget: 0,\n        fundStartDate: '',\n        fundEndDate: '',\n        siteName: '',\n        fundStartDateTemp: '',\n        fundEndDateTemp: '',\n    }\n\n    componentWillReceiveProps = (nextProps) => {\n        if (nextProps.energy_budget === 0) {\n            this.setState({ energy_budget: 0 });\n        }\n    }\n\n    handleChange = property => (event) => {\n        this.setState({ [property]: event.target.value });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        const site = this.props.sites[this.props.index]\n        const total_price = this.props.allSiteTypes[site.site_type_id - 1].total_price;\n        const energy_budget = this.state.energy_budget ? this.state.energy_budget : site.energy_budget;\n        const startDate = this.state.fundStartDate || site.start_date;\n        const endDate = this.state.fundEndDate || site.end_date;\n        const payoff_date = (moment(startDate)).add(\n            total_price / energy_budget, 'months');\n        const project_duration = (moment(endDate)).diff(moment(startDate), 'months');\n\n        const datasets = [{\n            label: 'Time to cover initial solar grid investment',\n            data: [{\n                x: moment(startDate),\n                y: total_price\n            }, {\n                x: payoff_date,\n                y: 0\n            }],\n            backgroundColor: payoff_date.isBefore(moment(endDate)) ? [\n                'rgb(0,0,255,0.7)'\n            ] : [\n                    '#DC143C'\n                ],\n            borderColor: [\n                'rgb(0,0,255)'\n            ],\n\n            borderWidth: 1,\n\n        }, {\n            label: 'Solar energy savings',\n            data: [{\n                x: payoff_date.isBefore(moment(endDate)) ?\n                    payoff_date : moment(startDate),\n                y: 0\n            }, {\n                x: moment(endDate),\n                y: payoff_date.isBefore(moment(endDate)) ?\n                    energy_budget * project_duration - total_price : 0\n            }],\n            backgroundColor: [\n                '#228b22'\n            ],\n            borderColor: [\n                '#228b22'\n            ],\n            borderWidth: 1\n        }, {\n            label: 'Cost of Diesel',\n            data: [{\n                x: startDate,\n                y: 0\n            }, {\n                x: endDate,\n                y: energy_budget * project_duration,\n            }],\n            backgroundColor: [\n                'rgb(128,128,128,0.7)'\n            ],\n            borderColor: [\n                'grey'\n            ],\n            borderWidth: 1\n        }\n        ]\n\n        const options = {\n            scales: {\n                xAxes: [{\n                    type: 'time',\n                    unitStepSize: 1,\n                    time: {\n                        unit: 'year',\n                        suggestedMax: '2020-01-05T18:06:17.762Z',\n                        suggestedMin: '2014-12-30T18:06:17.762Z',\n                    },\n                    distribution: 'linear',\n                    scaleLabel: {\n                        display: true,\n                        labelString: 'Project Timeline',\n                        fontSize: 22,\n                    }\n                }],\n                yAxes: [{\n                    scaleLabel: {\n                        display: true,\n                        labelString: 'Energy Costs',\n                        fontSize: 22,\n                    }\n                }]\n            },\n        };\n\n        return (\n            <div>\n                <h2 className=\"heading\" style={{marginBottom: '2vmin', paddingTop: '5vmin', fontSize: 'xx-large'}}>{site.site_name}</h2>\n\n                <div style={{ textAlign: 'center', borderBottom: '1px solid black', paddingBottom: '10px' }}>\n                    {this.state.editing ?\n                        <div >\n                            <TextField\n                                id=\"date\"\n                                label=\"Funding Start Date\"\n                                type=\"date\"\n                                onChange={this.handleChange('fundStartDateTemp')}\n                                className={classes.textField}\n                                value={this.state.fundStartDateTemp ? this.state.fundStartDateTemp : new Date(startDate).toISOString().substr(0, 10)}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                            <TextField\n                                label=\"Funding End Date\"\n                                type=\"date\"\n                                onChange={this.handleChange('fundEndDateTemp')}\n                                className={classes.textField}\n                                value={this.state.fundEndDateTemp ? this.state.fundEndDateTemp : new Date(endDate).toISOString().substr(0, 10)}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                            <span>\n                                <TextField\n                                    label=\"Monthly Energy Budget\"\n                                    className={classes.textField}\n                                    value={this.state.new_budget ? this.state.new_budget : energy_budget}\n                                    onChange={this.handleChange('new_budget')}\n                                    margin=\"normal\"\n                                    style={{ marginTop: '0px' }}\n                                />\n                                <Button color=\"primary\" variant=\"outlined\" onClick={() => this.setState({\n                                    energy_budget: this.state.new_budget,\n                                    fundStartDate: this.state.fundStartDateTemp,\n                                    fundEndDate: this.state.fundEndDateTemp\n                                })}>Reset Chart</Button>\n                                <Button color=\"primary\" variant=\"outlined\" onClick={() => { this.setState({ editing: false }) }}>Save Changes</Button>\n                            </span>\n                        </div> :\n                        <div style={{ color: 'black', display: 'inline', fontSize: 'x-large' }}>\n                            <span style={{ paddingLeft: '10vmin' }}><strong style={{ color: 'blue' }}>Start Date: {(new Date(startDate).toDateString())}</strong> </span>\n                            <span style={{ paddingLeft: '10vmin' }}><strong style={{ color: 'blue' }}>End Date: {(new Date(endDate)).toDateString()}</strong> </span>\n                            <span style={{ paddingLeft: '10vmin' }}><strong style={{ color: 'blue' }}>Monthly Energy Budget: ${energy_budget.toLocaleString()}</strong> </span>\n                            <Button color=\"primary\" variant=\"outlined\" size=\"medium\"\n                                onClick={() => this.setState({ editing: !this.state.editing })}>\n                                Edit\n                    </Button>\n                        </div>}\n                    {/* <h3>{this.state.editing ?\n                            <span>\n                                <TextField\n                                    label=\"Monthly Energy Budget\"\n                                    className={classes.textField}\n                                    value={this.state.new_budget ? this.state.new_budget : energy_budget}\n                                    onChange={this.handleChange('new_budget')}\n                                    margin=\"normal\"\n                                />\n                                <Button color=\"primary\" variant=\"outlined\" onClick={() => this.setState({\n                                    energy_budget: this.state.new_budget,\n                                    fundStartDate: this.state.fundStartDateTemp,\n                                    fundEndDate: this.state.fundEndDateTemp\n                                })}>Reset Chart</Button>\n                                <Button color=\"primary\" variant=\"outlined\" onClick={() => { this.setState({ editing: false }) }}>Save Changes</Button>\n                            </span> :\n                            <span style={{ borderBottom: '1px solid black', paddingBottom: '20px', color: 'black' }}><span><strong style={{ color: 'blue' }}>Monthly Energy Budget: ${energy_budget.toLocaleString()}</strong>\n\n                            </span> &emsp;\n                        <Button color=\"primary\" variant=\"outlined\" size=\"medium\"\n                                    onClick={() => this.setState({ editing: !this.state.editing })}>\n                                    Edit\n                    </Button> </span>}\n                        </h3> */}\n                </div>\n\n                <div style={{ display: 'inline-block', width: '100%', paddingTop: '3vmin'}}>\n                    <div style={{ float: 'left', width: '30%', color: 'LimeGreen', paddingLeft: '8vmin' }}>\n                        {/* <h2 style={{ color: 'black', textAlign: 'left' }}>Name: {site.site_name}</h2> */}\n                        {/* {this.state.editing ?\n                            <div>\n                                <TextField\n                                    id=\"date\"\n                                    label=\"Funding Start Date\"\n                                    type=\"date\"\n                                    onChange={this.handleChange('fundStartDateTemp')}\n                                    className={classes.textField}\n                                    value={this.state.fundStartDateTemp}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                                <TextField\n                                    label=\"Funding End Date\"\n                                    type=\"date\"\n                                    onChange={this.handleChange('fundEndDateTemp')}\n                                    className={classes.textField}\n                                    value={this.state.fundEndDateTemp ? this.state.fundEndDateTemp : endDate}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                            </div> :\n                            <div style={{color: 'black'}}>\n                                <h3>Start Date: <strong style={{ color: 'blue' }}>{(new Date(startDate).toDateString())}</strong></h3>\n                                <h3>End Date: <strong style={{ color: 'blue' }}>{(new Date(endDate)).toDateString()}</strong></h3>\n                            </div>}\n                        <h3>{this.state.editing ?\n                            <span>\n                                <TextField\n                                    label=\"Monthly Energy Budget\"\n                                    className={classes.textField}\n                                    value={this.state.new_budget ? this.state.new_budget : energy_budget}\n                                    onChange={this.handleChange('new_budget')}\n                                    margin=\"normal\"\n                                />\n                                <Button color=\"primary\" variant=\"outlined\" onClick={() => this.setState({\n                                    energy_budget: this.state.new_budget,\n                                    fundStartDate: this.state.fundStartDateTemp,\n                                    fundEndDate: this.state.fundEndDateTemp\n                                })}>Reset Chart</Button>\n                                <Button color=\"primary\" variant=\"outlined\" onClick={() => { this.setState({ editing: false }) }}>Save Changes</Button>\n                            </span> :\n                            <span style={{ borderBottom: '1px solid black', paddingBottom: '20px', color: 'black' }}><span>Monthly Energy Budget: <strong style={{ color: 'blue' }}>${energy_budget.toLocaleString()}</strong>\n\n                            </span> &emsp;\n                        <Button color=\"primary\" variant=\"outlined\" size=\"medium\"\n                                    onClick={() => this.setState({ editing: !this.state.editing })}>\n                                    Edit\n                    </Button> </span>}\n                        </h3> */}\n\n\n                        {/* Non-editable data */}\n\n                        <div className='leftAlign'>\n                            <h2>Site Type: <strong style={{ color: 'MediumTurquoise' }}>{this.props.allSiteTypes[site.site_type_id - 1].type}</strong></h2>\n                            <h3 >{site.generators[0].size &&\n                                        <h3 id=\"generators\">Generators: <strong style={{ color: 'MediumTurquoise' }}> {site.generators.map((generator, index) => <span key={index}>\n                                        {generator.size} {generator.unit} </span>)}</strong>\n                                            {/* <ul style={{ listStyleType: 'none', }}>\n                                                <strong style={{ color: 'MediumTurquoise' }}>{site.generators.map((generator, index) => <li key={index}>\n                                                    {generator.size} {generator.unit} </li>)}</strong>\n                                            </ul> */}\n                                        </h3>}\n                                    </h3>\n                            {payoff_date.isBefore(moment(endDate)) ?\n                                <div>\n                                    <h2>Time to pay off: <strong style={{ color: 'MediumTurquoise' }}>{parseInt(moment(payoff_date).diff(startDate, 'months'))} months</strong></h2>\n                                    <h2>Total Savings: <strong style={{ color: 'MediumTurquoise' }}>${parseInt(energy_budget * project_duration - total_price).toLocaleString()}</strong></h2>\n                                    <h2>Jobs Created: <strong style={{ color: 'MediumTurquoise' }}>{this.props.allSiteTypes[site.site_type_id - 1].jobs_created}</strong></h2>\n                                    <h2>Total Co2 Saved: <strong style={{ color: 'MediumTurquoise' }}>{this.props.allSiteTypes[site.site_type_id - 1].co2_saved.toLocaleString()} lbs</strong></h2>\n                                </div>\n                                :\n                                <h3 className=\"center\" style={{ color: 'DarkRed' }}>Monthly Budget Needed To Pay Off In Time: ${parseInt(total_price / project_duration).toLocaleString()}</h3>}\n\n\n\n                            <br />\n                            {/* <div className=\"center\">\n                            <Button color=\"primary\" variant=\"outlined\" size=\"medium\"\n                                onClick={() => this.setState({ editing: !this.state.editing })}>\n                                Edit\n                            </Button>\n                        </div> */}\n                            <br />\n                        </div>\n                    </div>\n\n                    <div style={{ width: \"65%\", minHeight: '50%', float: 'right' }}>\n                        <Line data={{ datasets: datasets }} options={options} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    sites: state.sitesByProject,\n    siteTypes: state.siteTypes,\n    allSiteTypes: state.allSiteTypes,\n    dieselCalculation: state.dieselCalculation,\n    generator: state.generator\n});\n\nSavedSitePage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nexport default withStyles(styles)(connect(mapStateToProps)(SavedSitePage));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n// import google maps api for Marker\nimport { Marker } from 'react-google-maps';\nimport Hospital from '../../icons/hospital.svg'\nimport Business from '../../icons/business.svg'\nimport Home from '../../icons/home.svg'\nimport Restaurant from '../../icons/restaurant.svg'\nimport Router from '../../icons/router.svg'\nimport Security from '../../icons/security.svg'\nimport Store from '../../icons/store.svg'\nimport Waves from '../../icons/waves.svg'\n\nclass SiteMarker extends Component {\n    state = {\n        isOpen: false,\n    }\n    \n    handleToggleOpen = () => {\n        this.setState({\n          isOpen: !this.state.isOpen,\n        });\n    };\n\n    chooseIcon = iconCategory => {\n        switch (iconCategory) {\n            case 'Health':\n                return Hospital \n            case 'Water':\n                return Waves\n            case 'Comms':\n                return Router\n            case 'Ops':\n                return Security\n            case 'Shelter':\n                return Home\n            case 'Food':\n                return Restaurant\n            case 'Admin':\n                return Business\n            case 'Logs':\n                return Store\n            default:\n                return null;\n        }\n    }\n\n  render() {\n    return (  \n        // Setup Marker\n        <Marker\n            optimized=\"false\"\n            position={this.props.position}\n            onClick={() => this.props.selectSite(this.props.index)}\n            icon={{ url: this.chooseIcon(this.props.image),\n            size: {width: 60, height: 100}, anchor: {x: 15, y: 50}, scaledSize: {width: 30, height: 30}, }}\n            >\n        </Marker>\n        // End Marker\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n    state: state,\n  });\n\nexport default withRouter(connect(mapStateToProps)(SiteMarker));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withScriptjs, withGoogleMap, GoogleMap } from 'react-google-maps';\nimport { SearchBox } from 'react-google-maps/lib/components/places/SearchBox';\nimport _ from 'lodash';\nimport { Marker } from 'react-google-maps';\nimport SiteMarker from '../Marker/Marker'\n// Allow usage of Google Map by declaring global google\n/* global google */\n\nclass SitesMap extends React.Component {\n  state = {\n    bounds: null,\n    center: {\n      lat: 40, lng: 45\n    },\n    isMarkerShown: false,\n    showInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {},\n    windowPosition: null,\n    mapClicked: false,\n  }\n\n  componentWillMount() {\n    const refs = {}\n\n\n    this.setState({\n      bounds: null,\n      center: {\n        lat: Number(this.props.sitesByProject[0].latitude), lng: Number(this.props.sitesByProject[0].longitude)\n      },\n      markers: [],\n      onMapMounted: ref => {\n        refs.map = ref;\n      },\n      onBoundsChanged: () => {\n        this.setState({\n          bounds: refs.map.getBounds(),\n          center: refs.map.getCenter(),\n        })\n      },\n      onSearchBoxMounted: ref => {\n        refs.searchBox = ref;\n      },\n      onPlacesChanged: () => {\n        const places = refs.searchBox.getPlaces();\n        const bounds = new google.maps.LatLngBounds();\n\n        places.forEach(place => {\n          if (place.geometry.viewport) {\n            bounds.union(place.geometry.viewport)\n          } else {\n            bounds.extend(place.geometry.location)\n          }\n        });\n        const nextMarkers = places.map(place => ({\n          position: place.geometry.location,\n        }));\n        const nextCenter = _.get(nextMarkers, '0.position', this.state.center);\n\n        this.setState({\n          center: nextCenter,\n          markers: nextMarkers,\n        });\n        refs.map.fitBounds(bounds);\n      },\n    })\n  }\n\n  componentDidMount() {\n    this.delayedShowMarker()\n  }\n\n  delayedShowMarker = () => {\n    setTimeout(() => {\n      this.setState({ isMarkerShown: true })\n    }, 3000)\n  }\n\n  render() {\n    return (\n      <div>\n        <GoogleMap\n          ref={this.state.onMapMounted}\n          defaultZoom={5.5}\n          center={this.state.center}\n          onClick={this.props.handleClick}\n          onBoundsChanged={this.props.onBoundsChanged}\n          defaultOptions={{\n            // these following 7 options turn certain controls off see link below\n            streetViewControl: false,\n            scaleControl: false,\n            mapTypeControl: false,\n            panControl: false,\n            rotateControl: false,\n            fullscreenControl: false\n          }}>\n          < SearchBox\n            ref={this.state.onSearchBoxMounted}\n            bounds={this.state.bounds}\n            controlPosition={google.maps.ControlPosition.TOP_LEFT}\n\n            onPlacesChanged={this.state.onPlacesChanged} >\n            <input\n              type=\"text\"\n              placeholder=\"Enter Site Location\"\n              style={{\n                boxSizing: `border-box`,\n                border: `1px solid transparent`,\n                width: `80%`,\n                height: `6%`,\n                marginTop: `5%`,\n                marginLeft: '10%',\n                padding: `0 12px`,\n                borderRadius: `3px`,\n                boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n                fontSize: `2vmin`,\n                outline: `none`,\n                textOverflow: `ellipses`,\n              }}\n            />\n          </SearchBox>\n          {/*  Display Markers with InfoWindows */}\n          {this.props.sitesByProject.map((site, index) => <SiteMarker key={index}\n            position={{ lat: Number(site.latitude), lng: Number(site.longitude) }}\n            selectSite={this.props.selectSite}\n            index={index}\n            image={this.props.allSiteTypes[(site.site_type_id - 1)].category}\n          />)}\n          {/* End Markers Display */}\n        </GoogleMap>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  state: state,\n  sitesByProject: state.sitesByProject,\n  allSiteTypes: state.allSiteTypes,\n});\n\nexport default connect(mapStateToProps)(withScriptjs(withGoogleMap(SitesMap)))","import React, { Component } from 'react';\n// connect to redux\nimport { connect } from 'react-redux';\n// material-ui imports\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\nimport RouterIcon from '@material-ui/icons/Router';\nimport WavesIcon from '@material-ui/icons/Waves';\nimport SecurityIcon from '@material-ui/icons/Security';\nimport HomeIcon from '@material-ui/icons/Home';\nimport StoreIcon from '@material-ui/icons/Store';\n// css\nimport './ProjectPage.css';\n// import saved sites page to see info about specific site on click\nimport SavedSitePage from '../SavedSitePage/SavedSitePage';\n// import map to see sites on map with icons\nimport SitesMap from '../SitesMap/SitesMap';\n// forced scrolling\nimport scrollToComponent from 'react-scroll-to-component';\n\n// jss styles\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    button: {\n        margin: 'auto',\n    },\n    cardDiv: {\n        marginTop: '5%',\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-evenly',\n    },\n    card: {\n        paddingTop: '2vmin',\n        width: '30vmin',\n        height: '37vmin',\n        margin: 10,\n        textAlign: 'center',\n    },\n    icon: {\n        width: '10vmin',\n        height: '10vmin',\n    }\n});\n\nclass ProjectPage extends Component {\n\n    state = {\n        currentIndex: -1,\n        icon: '',\n    }\n\n    componentDidMount() {\n        this.props.dispatch({ type: 'FETCH_ALL_SITE_TYPES' });\n        this.setState({\n            icon: this.chooseIcon('Health'),\n        });\n        window.scrollTo(0,0)\n    }\n\n    selectSite = (index) => {\n        this.setState({\n            currentIndex: index,\n        })\n        setTimeout(() => scrollToComponent(this.siteSelect, { offset: 0, align: 'top', duration: 750 }), 200);\n    }\n\n    chooseIcon = iconCategory => {\n        switch (iconCategory) {\n            case 'Health':\n                return <LocalHospitalIcon style={{ width: \"10vmin\", height: \"10vmin\" }} />\n            case 'Water':\n                return <WavesIcon style={{ width: \"10vmin\", height: \"10vmin\" }} />\n            case 'Comms':\n                return <RouterIcon style={{ width: \"10vmin\", height: \"10vmin\" }} />\n            case 'Ops':\n                return <SecurityIcon style={{ width: \"10vmin\", height: \"10vmin\" }} />\n            case 'Shelter':\n                return <HomeIcon style={{ width: \"10vmin\", height: \"10vmin\" }} />\n            case 'Food':\n                return <RestaurantIcon style={{ width: \"10vmin\", height: \"10vmin\" }} />\n            case 'Admin':\n                return <BusinessCenterIcon style={{ width: \"10vmin\", height: \"10vmin\" }} />\n            case 'Logs':\n                return <StoreIcon style={{ width: \"10vmin\", height: \"10vmin\" }} />\n            default:\n                return null;\n        }\n    }\n\n    handleAddSite = () => {\n        this.props.history.push('/add_site')\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <div>\n                    {!this.props.project.length ? <p>loading...</p> :\n                        <div>\n                            <h1 className=\"heading\">{this.props.project[0].name}\n                                <pre>\n                                    <Button\n                                        onClick={this.handleAddSite}\n                                        size=\"medium\"\n                                        variant=\"contained\"\n                                        color=\"primary\">\n                                        Add Site\n                          </Button>\n                                </pre>\n                            </h1>\n                        </div>}\n                    {!this.props.sitesByProject.length ? <h2>Add a site to get started!</h2> :\n                        <div>\n                            <div className={classes.cardDiv}>\n                                {this.props.sitesByProject.map((site, index) =>\n                                    <Card className={classes.card} key={index}>\n                                        <CardContent>\n                                            <Typography variant=\"h4\">\n                                                {\n                                                    this.chooseIcon(\n                                                        this.props.allSiteTypes[(site.site_type_id - 1)].category)\n                                                }\n                                                <br />\n                                            </Typography>\n\n                                            <Typography variant=\"h6\">\n                                                {site.site_name}\n                                            </Typography>\n\n                                            <Typography>\n                                                Energy Budget: &nbsp; {site.energy_budget}\n                                            </Typography>\n                                        </CardContent>\n                                        <CardActions>\n                                            <div className={classes.button}>\n                                                <Button\n                                                    size=\"large\"\n                                                    variant=\"outlined\"\n                                                    color=\"secondary\"\n                                                    onClick={() => this.selectSite(index)}\n\n                                                >\n                                                    Select Site\n                                        </Button>\n                                            </div>\n                                        </CardActions>\n                                    </Card>\n                                )}\n                                <div>\n                                <SitesMap\n                                    googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCZv9A4Vtnra6r04z9JnNk91zeXwX82O68&v=3.exp&libraries=geometry,drawing,places\"\n                                    loadingElement={<div style={{ height: `100%` }} />}\n                                    containerElement={<div style={{ height: `80vmin`, width: '80vmin', margin: 'auto', }} />}\n                                    mapElement={<div style={{ height: `100%` }} />}\n                                    isMarkerShown={this.state.isMarkerShown}\n                                    onMarkerClick={this.handleMarkerClick}\n                                    handleToggleOpen={this.handleToggleOpen}\n                                    isOpen={this.state.isOpen}\n                                    onClick={this.handleClick}\n                                    location={this.state.location}\n                                    handleClick={this.handleClick}\n                                    mapClicked={this.state.mapClicked}\n                                    selectSite={this.selectSite}\n                                >\n\n\n                                </SitesMap>\n                                </div>\n\n\n                            </div>\n                            {this.state.currentIndex < 0 ? <h2 id=\"siteSelect\">Choose a site!</h2> :\n                                <section className='siteSelect' ref={(section) => { this.siteSelect = section; }}>\n                                    <SavedSitePage\n                                        index={this.state.currentIndex}\n                                        energy_budget={0}\n                                    />\n                                </section>\n                            }\n                        </div>}\n                </div>\n                <div id=\"bugSpacing\"></div>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    sitesByProject: state.sitesByProject,\n    project: state.project,\n    allSiteTypes: state.allSiteTypes,\n});\n\nProjectPage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(connect(mapStateToProps)(ProjectPage));","import React, { Component } from 'react';\n// connect to redux state\nimport { connect } from 'react-redux';\n// material-ui imports\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n// for routing\nimport { withRouter } from 'react-router-dom';\n// css\nimport './AddProject.css'\n\n// jss styles\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 200,\n    },\n});\n\nclass AddProject extends Component {\n\n    state = {\n        projectName: '',\n        user_id: this.props.user.id,\n        image_url: ''\n    }\n\n    // handles adding a project for logged in users\n    handleSubmit = event => {\n        event.preventDefault();\n        this.props.dispatch({\n            type: 'ADD_PROJECT', payload: this.state\n        });\n        this.setState({\n            projectName: '',\n        });\n        this.props.history.push('/dashboard')\n    } // end handleSubmit\n\n    // handles changes in input boxes \n    handleChange = property => event => {\n        this.setState({\n            ...this.state,\n            [property]: event.target.value\n        })\n    } // end handleChange\n\n    render() {\n\n        const { classes } = this.props;\n\n            return (\n\n                <div>\n                    <h1 className=\"heading\">Add Project</h1>\n                        <form onSubmit={this.handleSubmit} >\n                            <TextField\n                                id=\"standard-name\"\n                                label=\"Project Name\"\n                                className={classes.textField}\n                                value={this.state.projectName}\n                                required\n                                onChange={this.handleChange('projectName')}\n                                margin=\"normal\"\n                            />\n                             <TextField\n                                id=\"standard-name\"\n                                label=\"Image URL\"\n                                className={classes.textField}\n                                value={this.state.image_url}\n                                onChange={this.handleChange('image_url')}\n                                margin=\"normal\"\n                            />\n                            <Button \n                                value=\"submit\" \n                                type=\"submit\" \n                                variant=\"contained\" \n                                color=\"primary\" \n                                className={classes.button}\n                            >\n                                Add Project\n                            </Button>\n                        </form>\n                        <div id=\"bugSpacing\"></div>\n                </div>\n\n            );\n    }\n}\n\n// access to redux state\nconst mapStateToProps = state => ({\n    state: state,\n    user: state.user,\n});\n\n// needed for jss styles\nAddProject.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withStyles(styles)(connect(mapStateToProps)(AddProject)));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    button: {\n        width: '100%',\n        margin: 'auto',\n    },\n    cardDiv: {\n        marginTop: '5%',\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-evenly',\n    },\n    card: {\n        width: '30vmin',\n        height: '40vmin',\n        margin: 10,\n        textAlign: 'center',\n    },\n    media: {\n        height: '20vmin',\n    },\n});\n\nclass UserDashboard extends Component {\n\n    componentDidMount() {\n        this.props.dispatch({ type: 'GET_PROJECTS', payload: { id: this.props.user.id } });\n        this.props.dispatch({ type: 'FETCH_ALL_SITE_TYPES' });\n    }\n\n    selectProject = (id) => {\n        this.props.dispatch({ type: 'SELECT_PROJECT', payload: id })\n        console.log('project id:', id);\n        \n        this.props.dispatch({ type: 'GET_PROJECT', payload: id })\n        this.props.dispatch({ type: 'GET_SITES_BY_PROJECT', payload: id })\n        this.props.history.push('/project')\n        \n    }\n\n    handleAddProject = () => {\n        this.props.history.push('/add_project')\n    }\n\n\n    render() {\n\n        const defaultImage = 'http://vibrance.co/clarity/img/Project-Icon.png';\n\n        const { classes } = this.props;\n\n        return (\n\n            <div>\n                <h1 className=\"heading\">Dashboard</h1>\n                <h2 className=\"subHeading\">Projects \n                    <br></br>\n                    <br></br>\n                    <Button  \n                    onClick={this.handleAddProject}\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"primary\">\n                    Add Project\n                    </Button>\n                </h2>\n                <div>\n                    <div>\n                        \n                    </div>\n                    {!this.props.projects.length ? <h3 className=\"heading\">Add a project to get started!</h3> \n                    \n                    :\n                        <div>\n                    <div className={classes.cardDiv}>\n                        {this.props.projects.map((project,index) =>\n                            <Card className={classes.card} key={index}>\n\n                                <CardMedia\n                                    className={classes.media}\n                                    image={project.image || defaultImage}\n                                    title={project.name}\n                                />\n                                <CardContent>\n                                    <Typography variant=\"h5\">\n                                        {project.name}\n                                    </Typography>\n                                    {/* <br /> */}\n                                </CardContent>\n                                <CardActions>\n                                    <div className={classes.button}>\n                                        <Button\n                                            size=\"medium\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                            onClick={() => this.selectProject(project.id)}\n                                        >\n                                            Select Project\n                                        </Button>\n                                    </div>\n                                </CardActions>\n                            </Card>\n                        )}\n                    </div>\n\n                        </div>}\n\n\n                </div>\n                    <div id=\"bugSpacing\"></div>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    state: state,\n    user: state.user,\n    projects: state.projectsReducer,\n});\n\nUserDashboard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(connect(mapStateToProps)(UserDashboard));","import React, {Component} from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport {connect} from 'react-redux';\n\nimport Nav from '../Nav/Nav';\nimport Footer from '../Footer/Footer';\nimport BugReport from '../BugReport/BugReport';\n\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute'\nimport AddSite from '../AddSite/AddSite';\nimport ProjectPage from '../ProjectPage/ProjectPage';\nimport SavedSitePage from '../SavedSitePage/SavedSitePage';\nimport AddProject from '../AddProject/AddProject';\nimport UserDashboard from '../UserDashboard/UserDashboard';\n\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.dispatch({type: 'FETCH_USER'})\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n            <Redirect exact from=\"/\" to=\"/add_site\" />\n            {/* For protected routes, the view could show one of several things on the same route.\n            Visiting localhost:3000/home will show the UserDashboard if the user is logged in.\n            If the user is not logged in, the ProtectedRoute will show the 'Login' or 'Register' page.\n            Even though it seems like they are different pages, the user is always on localhost:3000/home */}\n            <ProtectedRoute\n              exact\n              path=\"/dashboard\"\n              component={UserDashboard}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/add_project\"\n              component={AddProject}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/project\"\n              component={ProjectPage}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/saved_site\"\n              component={SavedSitePage}\n            />\n            <Route\n              exact\n              path=\"/add_site\"\n              component={AddSite}\n            />\n            {/* If none of the other routes matched, we will show a 404. */}\n            <Route render={() => <h1>404</h1>} />\n          </Switch>\n          <Footer />\n          <div></div>\n          <BugReport />\n        </div>\n      </Router>\n  )}\n}\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}